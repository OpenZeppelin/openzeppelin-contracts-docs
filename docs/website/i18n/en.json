{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "OpenZeppelin is an open framework of reusable and secure smart contracts in the Solidity language.",
    "access_rbac_RBAC": "RBAC",
    "access_rbac_Roles": "Roles",
    "access_SignatureBouncer": "SignatureBouncer",
    "access_Whitelist": "Whitelist",
    "AddressUtils": "AddressUtils",
    "AutoIncrementing": "AutoIncrementing",
    "Bounty_Target": "Target",
    "Bounty": "Bounty",
    "crowdsale_Crowdsale": "Crowdsale",
    "crowdsale_distribution_FinalizableCrowdsale": "FinalizableCrowdsale",
    "crowdsale_distribution_PostDeliveryCrowdsale": "PostDeliveryCrowdsale",
    "crowdsale_distribution_RefundableCrowdsale": "RefundableCrowdsale",
    "crowdsale_emission_AllowanceCrowdsale": "AllowanceCrowdsale",
    "crowdsale_emission_MintedCrowdsale": "MintedCrowdsale",
    "crowdsale_price_IncreasingPriceCrowdsale": "IncreasingPriceCrowdsale",
    "crowdsale_validation_CappedCrowdsale": "CappedCrowdsale",
    "crowdsale_validation_IndividuallyCappedCrowdsale": "IndividuallyCappedCrowdsale",
    "crowdsale_validation_TimedCrowdsale": "TimedCrowdsale",
    "crowdsale_validation_WhitelistedCrowdsale": "WhitelistedCrowdsale",
    "ECRecovery": "ECRecovery",
    "examples_RBACWithAdmin": "RBACWithAdmin",
    "examples_SampleCrowdsale_SampleCrowdsaleToken": "SampleCrowdsaleToken",
    "examples_SampleCrowdsale": "SampleCrowdsale",
    "examples_SimpleSavingsWallet": "SimpleSavingsWallet",
    "examples_SimpleToken": "SimpleToken",
    "introspection_ERC165": "ERC165",
    "introspection_SupportsInterfaceWithLookup": "SupportsInterfaceWithLookup",
    "lifecycle_Destructible": "Destructible",
    "lifecycle_Pausable": "Pausable",
    "lifecycle_TokenDestructible": "TokenDestructible",
    "LimitBalance": "LimitBalance",
    "math_Math": "Math",
    "math_SafeMath": "SafeMath",
    "MerkleProof": "MerkleProof",
    "mocks_AllowanceCrowdsaleImpl": "AllowanceCrowdsaleImpl",
    "mocks_AutoIncrementingImpl": "AutoIncrementingImpl",
    "mocks_BasicTokenMock": "BasicTokenMock",
    "mocks_BouncerMock_SignatureBouncerMock": "SignatureBouncerMock",
    "mocks_BurnableTokenMock": "BurnableTokenMock",
    "mocks_CappedCrowdsaleImpl": "CappedCrowdsaleImpl",
    "mocks_ConditionalEscrowMock": "ConditionalEscrowMock",
    "mocks_DestructibleMock": "DestructibleMock",
    "mocks_DetailedERC20Mock": "DetailedERC20Mock",
    "mocks_ECRecoveryMock": "ECRecoveryMock",
    "mocks_ERC20WithMetadataMock": "ERC20WithMetadataMock",
    "mocks_ERC223TokenMock_ERC223ContractInterface": "ERC223ContractInterface",
    "mocks_ERC223TokenMock": "ERC223TokenMock",
    "mocks_ERC721BasicTokenMock": "ERC721BasicTokenMock",
    "mocks_ERC721ReceiverMock": "ERC721ReceiverMock",
    "mocks_ERC721TokenMock": "ERC721TokenMock",
    "mocks_FinalizableCrowdsaleImpl": "FinalizableCrowdsaleImpl",
    "mocks_ForceEther": "ForceEther",
    "mocks_HasNoEtherTest": "HasNoEtherTest",
    "mocks_IncreasingPriceCrowdsaleImpl": "IncreasingPriceCrowdsaleImpl",
    "mocks_IndividuallyCappedCrowdsaleImpl": "IndividuallyCappedCrowdsaleImpl",
    "mocks_InsecureTargetBounty_InsecureTargetMock": "InsecureTargetMock",
    "mocks_InsecureTargetBounty": "InsecureTargetBounty",
    "mocks_LimitBalanceMock": "LimitBalanceMock",
    "mocks_MathMock": "MathMock",
    "mocks_MerkleProofWrapper": "MerkleProofWrapper",
    "mocks_MessageHelper": "MessageHelper",
    "mocks_MintedCrowdsaleImpl": "MintedCrowdsaleImpl",
    "mocks_PausableMock": "PausableMock",
    "mocks_PausableTokenMock": "PausableTokenMock",
    "mocks_PostDeliveryCrowdsaleImpl": "PostDeliveryCrowdsaleImpl",
    "mocks_PullPaymentMock": "PullPaymentMock",
    "mocks_RBACCappedTokenMock": "RBACCappedTokenMock",
    "mocks_RBACMock": "RBACMock",
    "mocks_ReentrancyAttack": "ReentrancyAttack",
    "mocks_ReentrancyMock": "ReentrancyMock",
    "mocks_RefundableCrowdsaleImpl": "RefundableCrowdsaleImpl",
    "mocks_SafeERC20Helper_ERC20FailingMock": "ERC20FailingMock",
    "mocks_SafeERC20Helper_ERC20SucceedingMock": "ERC20SucceedingMock",
    "mocks_SafeERC20Helper": "SafeERC20Helper",
    "mocks_SafeMathMock": "SafeMathMock",
    "mocks_SecureTargetBounty_SecureTargetMock": "SecureTargetMock",
    "mocks_SecureTargetBounty": "SecureTargetBounty",
    "mocks_StandardBurnableTokenMock": "StandardBurnableTokenMock",
    "mocks_StandardTokenMock": "StandardTokenMock",
    "mocks_SupportsInterfaceWithLookupMock": "SupportsInterfaceWithLookupMock",
    "mocks_TimedCrowdsaleImpl": "TimedCrowdsaleImpl",
    "mocks_WhitelistedCrowdsaleImpl": "WhitelistedCrowdsaleImpl",
    "mocks_WhitelistMock": "WhitelistMock",
    "ownership_CanReclaimToken": "CanReclaimToken",
    "ownership_Claimable": "Claimable",
    "ownership_Contactable": "Contactable",
    "ownership_DelayedClaimable": "DelayedClaimable",
    "ownership_HasNoContracts": "HasNoContracts",
    "ownership_HasNoEther": "HasNoEther",
    "ownership_HasNoTokens": "HasNoTokens",
    "ownership_Heritable": "Heritable",
    "ownership_NoOwner": "NoOwner",
    "ownership_Ownable": "Ownable",
    "ownership_Superuser": "Superuser",
    "payment_ConditionalEscrow": "ConditionalEscrow",
    "payment_Escrow": "Escrow",
    "payment_PullPayment": "PullPayment",
    "payment_RefundEscrow": "RefundEscrow",
    "payment_SplitPayment": "SplitPayment",
    "proposals_ERC1046_TokenMetadata_ERC20TokenMetadata": "ERC20TokenMetadata",
    "proposals_ERC1046_TokenMetadata_ERC20WithMetadata": "ERC20WithMetadata",
    "ReentrancyGuard": "ReentrancyGuard",
    "token_ERC20_BasicToken": "BasicToken",
    "token_ERC20_BurnableToken": "BurnableToken",
    "token_ERC20_CappedToken": "CappedToken",
    "token_ERC20_DetailedERC20": "DetailedERC20",
    "token_ERC20_ERC20": "ERC20",
    "token_ERC20_ERC20Basic": "ERC20Basic",
    "token_ERC20_MintableToken": "MintableToken",
    "token_ERC20_PausableToken": "PausableToken",
    "token_ERC20_RBACMintableToken": "RBACMintableToken",
    "token_ERC20_SafeERC20": "SafeERC20",
    "token_ERC20_StandardBurnableToken": "StandardBurnableToken",
    "token_ERC20_StandardToken": "StandardToken",
    "token_ERC20_TokenTimelock": "TokenTimelock",
    "token_ERC20_TokenVesting": "TokenVesting",
    "token_ERC721_DeprecatedERC721": "DeprecatedERC721",
    "token_ERC721_ERC721_ERC721Enumerable": "ERC721Enumerable",
    "token_ERC721_ERC721_ERC721Metadata": "ERC721Metadata",
    "token_ERC721_ERC721": "ERC721",
    "token_ERC721_ERC721Basic": "ERC721Basic",
    "token_ERC721_ERC721BasicToken": "ERC721BasicToken",
    "token_ERC721_ERC721Holder": "ERC721Holder",
    "token_ERC721_ERC721Receiver": "ERC721Receiver",
    "token_ERC721_ERC721Token": "ERC721Token",
    "get-started": "Get Started",
    "open-zeppelin": "OpenZeppelin",
    "learn-about-access-control": "Learn about Access Control",
    "learn-about-crowdsales": "Learn About Crowdsales",
    "learn-about-tokens": "Learn About Tokens",
    "learn-about-utilities": "Learn About Utilities",
    "Home": "Home",
    "Docs": "Docs",
    "API": "API",
    "Github": "Github",
    "ABOUT": "ABOUT",
    "ACCESS": "ACCESS",
    "ACCESS / RBAC": "ACCESS / RBAC",
    "CROWDSALE": "CROWDSALE",
    "CROWDSALE / DISTRIBUTION": "CROWDSALE / DISTRIBUTION",
    "CROWDSALE / EMISSION": "CROWDSALE / EMISSION",
    "CROWDSALE / PRICE": "CROWDSALE / PRICE",
    "CROWDSALE / VALIDATION": "CROWDSALE / VALIDATION",
    "INTROSPECTION": "INTROSPECTION",
    "LIFECYCLE": "LIFECYCLE",
    "MATH": "MATH",
    "OWNERSHIP": "OWNERSHIP",
    "PAYMENT": "PAYMENT",
    "PROPOSALS / ERC1046": "PROPOSALS / ERC1046",
    "TOKEN / ERC20": "TOKEN / ERC20",
    "TOKEN / ERC721": "TOKEN / ERC721",
    "UNCATEGORIZED": "UNCATEGORIZED",
    "OWNERSHIP / RBAC": "OWNERSHIP / RBAC",
    "CROWDSALE / DISTRIBUTION / UTILS": "CROWDSALE / DISTRIBUTION / UTILS",
    "TOKEN / ERC827": "TOKEN / ERC827",
    "TOKEN": "TOKEN"
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
